version: '3.3'
services:
  database:
    container_name: database-server
    hostname: database-server
    image: mariadb:10.11
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-read-only-compressed=OFF
    volumes:
      - database_data:/var/lib/mysql
    env_file:
      - db.env
    networks:
      - cloud
  app:
    container_name: cloud-server
    hostname: cloud-server
    build:
      context: ./cloud
      dockerfile: Dockerfile
    image: dimosella/cloud:latest
    stdin_open: true
    tty: true
    restart: always
    expose:
      - '443'
      - '9000'
    depends_on:
      - database
    environment:
      - MYSQL_HOST=database
    env_file:
      - db.env
    networks:
      - cloud
    volumes:
      - app_root:/var/www/html
      - cloud_data:/var/www/html/data
      - ./cloud/fonts:/usr/share/fonts/truetype
      - ./cloud/www.conf:/usr/local/etc/php-fpm.d/www.conf
  bitwarden:
    container_name: secure-server
    hostname: secure-server
    image: vaultwarden/server:alpine
    stdin_open: true
    tty: true
    restart: always
    expose:
      - '443'
    env_file:
      - bw.env
    networks:
      - cloud
    volumes:
      - secure_data:/data/
  # flows:
  #   container_name: flows-services
  #   hostname: flows-services
  #   build:
  #     context: ./flows
  #     dockerfile: Dockerfile
  #   image: dimosella/flows:latest
  #   stdin_open: true
  #   tty: true
  #   restart: always
  #   expose:
  #     - '443'
  #     - '8000'
  #   depends_on:
  #     - app
  #   env_file:
  #     - flw.env
  #   networks:
  #     - cloud
  #   volumes:
  #     - flows_data:/home/flows/temp
    #shm_size:
    #  - '2gb'
  kiosk:
    container_name: kiosk
    hostname: kiosk
    build:
      context: ./kiosk
      dockerfile: Dockerfile
    image: dimosella/kiosk:latest
    stdin_open: true
    tty: true
    restart: always
    #privileged: true
    cap_add:
      - ALL
    #  - NET_RAW
    #  - NET_ADMIN
    #  - NET_BROADCAST
    #  - NET_BIND_SERVICE
    #  - SYS_ADMIN
    expose:
      - '8090'
    networks:
      - cloud
    volumes:
      - ./kiosk/software:/opt/kiosk
      - /var/run/dbus:/var/run/dbus
      - /var/run/avahi-daemon/socket:/var/run/avahi-daemon/socket
  backup:
    container_name: backup-services
    hostname: backup-services
    build:
      context: ./backup
      dockerfile: Dockerfile
    image: dimosella/backup:latest
    restart: always
    env_file:
      - db.env
      - bu.env
    networks:
      - cloud
    volumes:
      - app_root:/backup/source-root
      - cloud_data:/backup/source-cloud
      - secure_data:/backup/source-secure
      - backup_data:/backup/target
      - ./backup/scripts:/scripts
      - ./backup/crontab:/etc/crontabs/root
      - ../ssh:/root/.ssh:ro
  proxy:
    container_name: proxy-server
    hostname: proxy-server
    build:
      context: ./proxy
      dockerfile: Dockerfile
    image: dimosella/proxy:latest
    stdin_open: true
    tty: true
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      # - flows
    networks:
      - cloud
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/:/etc/nginx/etc/ssl
      - ../ssl/dhparam.pem:/etc/ssl/dhparam.pem
      - ../ssl/.htpasswd:/etc/ssl/.htpasswd
      - app_root:/var/www/html
networks:
  cloud:
    driver: 'bridge'
volumes:
  database_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /media/clouddata/mariadb
  cloud_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /media/clouddata/nextcloud
  secure_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /media/clouddata/bitwarden
  # flows_data:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /media/clouddata/flows
  backup_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /media/clouddata/backup
  app_root:
